<?phpnamespace User\Service;use User\Entity\Slider;use User\Functions\Slug;use Zend\Hydrator;/** * The PostManager service is responsible for adding new posts, updating existing * posts, adding tags to post, etc. */class SliderManager{    /**     * Entity manager.     * @var \Doctrine\ORM\EntityManager;     */    private $entityManager;    /**     * Discografia constructor.     * @param $entityManager     */    public function __construct($entityManager)    {        $this->entityManager = $entityManager;        $this->entity = Slider::class;    }    public function insert(array $data)    {        $entity = new $this->entity($data);        $slug = new Slug();        $geraSlug = $slug->geraSlug($data['titulo']);        $entity->setSlug($geraSlug);        $this->entityManager->persist($entity);        $this->entityManager->flush();        return $entity;    }    /**     * This method allows to update data of a single post.     */    public function update(array $data){                $entity = $this->entityManager->getReference($this->entity, $data['id']);        $entity =  (new Hydrator\ClassMethods())->hydrate($data, $entity);        $slug = new Slug();        $geraSlug = $slug->geraSlug($data['titulo']);        $entity->setSlug($geraSlug);        $this->entityManager->flush();        return $entity;    }    /**     * Returns status as a string.     */    public function getStatusAsString($post)    {        switch ($post->getStatus()) {            case Slider::STATUS_ACTIVE: return 'Ativo';            case Slider::STATUS_RETIRED: return 'Inativo';        }        return 'Unknown';    }    /**     * Removes post and all associated comments.     */    public function delete($post)    {        $this->entityManager->remove($post);        $this->entityManager->flush();    }}